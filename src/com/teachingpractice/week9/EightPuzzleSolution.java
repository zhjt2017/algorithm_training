package com.teachingpractice.week9;

/**
 * 算法实现：高级搜索 - 启发式搜索(A*) - 八数码问题
 * - https://www.acwing.com/problem/content/847/
 * <p>
 * 在一个 3×3 的网格中，1∼8 这 8 个数字和一个 x 恰好不重不漏地分布在这 3×3 的网格中。
 * <p>
 * 例如：
 * <p>
 * 1 2 3
 * x 4 6
 * 7 5 8
 * 在游戏过程中，可以把 x 与其上、下、左、右四个方向之一的数字交换（如果存在）。
 * <p>
 * 我们的目的是通过交换，使得网格变为如下排列（称为正确排列）：
 * <p>
 * 1 2 3
 * 4 5 6
 * 7 8 x
 * 例如，示例中图形就可以通过让 x 先后与右、下、右三个方向的数字交换成功得到正确排列。
 * <p>
 * 交换过程如下：
 * <p>
 * 1 2 3   1 2 3   1 2 3   1 2 3
 * x 4 6   4 x 6   4 5 6   4 5 6
 * 7 5 8   7 5 8   7 x 8   7 8 x
 * 现在，给你一个初始网格，请你求出得到正确排列至少需要进行多少次交换。
 * <p>
 * 输入格式
 * 输入占一行，将 3×3 的初始网格描绘出来。
 * <p>
 * 例如，如果初始网格如下所示：
 * <p>
 * 1 2 3
 * x 4 6
 * 7 5 8
 * 则输入为：1 2 3 x 4 6 7 5 8
 * <p>
 * 输出格式
 * 输出占一行，包含一个整数，表示最少交换次数。
 * <p>
 * 如果不存在解决方案，则输出 −1。
 * <p>
 * 输入样例：
 * 2  3  4  1  5  x  7  6  8
 * 输出样例
 * 19
 *
 * @author bruce.zhu@GeekTrainingCamp
 * @since 2022-03-17 05:53:08
 */
public class EightPuzzleSolution {
    public static void main(String[] args) {
        // TODO
    }
}
